#include <iostream>
#include <string>
#include <fstream>
#include <cstdio>
#include <vector>

using namespace std;

// formatを使うためのtemplate。c++11以上なので、g++をアップデート
template <typename ... Args>
std::string format(const std::string& fmt, Args ... args )
{
    size_t len = std::snprintf( nullptr, 0, fmt.c_str(), args ... );
    std::vector<char> buf(len + 1);
    std::snprintf(&buf[0], len + 1, fmt.c_str(), args ... );
    return std::string(&buf[0], &buf[0] + len);
}

int main(void)
{
    int mx = 20;  // 描画する幅。メッシュ数に合わせる。
    int step, step_end = 50;  // 書き出したファイルのステップ分
    string base = "./anime/temp_";
    string out_path = "anime.gp";

    ofstream file;
    file.open(out_path, ios::out);

    file<<"#"<<endl;
    file<<"# gnuplot script generated by heat_animation_make.cpp"<<endl;
    file<<"#"<<endl;
    file<<"set xlabel 'j'              # x-axis"<<endl;
    file<<"set ylabel 'temperature'    # y-axis"<<endl;
    file<<"set xrange[0:"<<mx+1<<"]     # j-grid min & max"<<endl;
    file<<"set yrange[0.0:0.5]         # temperature min & max"<<endl;

    for(step=1; step<step_end; step++){
        file<<"plot './anime/temp_"<<format("%05d",step)<<".dat' w lp"<<endl;
        if(step==1){
            file<<"pause 5"<<endl;
        }
        else{
            file<<"pause 1"<<endl;
        }
    }
    file.close();
}